<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on 一只菜鸡的成长之路</title>
    <link>https://blog.scnace.me/tags/go/</link>
    <description>Recent content in go on 一只菜鸡的成长之路</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>copyleft</copyright>
    
	<atom:link href="https://blog.scnace.me/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记一个有趣的bug</title>
      <link>https://blog.scnace.me/post/%E8%AE%B0%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84bug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.scnace.me/post/%E8%AE%B0%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84bug/</guid>
      <description>先看代码 Go Playground package main import ( &amp;quot;fmt&amp;quot; ) type bug struct { name string cause string } func main() { bugNames := []string{&amp;quot;an&amp;quot;, &amp;quot;interesting&amp;quot;, &amp;quot;bug&amp;quot;} var bugs []*bug bugObj := &amp;amp;bug{ cause: &amp;quot;sth&amp;quot;, } for idx, bn := range bugNames { bugs = append(bugs, bugObj) bugs[idx].name = bn } for _, b := range bugs { fmt.Printf(&amp;quot;bug:%v&amp;quot;, *b) } } 其实,不难看</description>
    </item>
    
  </channel>
</rss>